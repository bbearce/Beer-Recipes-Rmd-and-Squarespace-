MOV = ( (170 - TMT)*(0.2*GB + MV) )/(212 - 170)
SVPMO = SV - MOV # May or may not be necessary; This is what is left of SV if we mash out with MOV
# We could just not pour in all of MOV and just sparge slowly with all of SV
# as long as it is hot enough to reach mash out.
# Even if not we can heat with stove top.
TWN = MV + SV
mash <- data.frame(
recipe_id = 1,
Mash_Thickness = MT,
Sacc_Rest_Temp = TMT,
Mash_Duration = MD,
Init_Grain_Temp = GT,
Infusion_Temp = IT,
Mash_Volume_Gal = MV,
Sparge_Vol = SV,
Mash_Out_Vol = MOV
)
kable(mash)
init_Ca <- 4
init_Mg <- 1
init_Na <- 32
init_Cl <- 23
init_SO4 <- 6
init_HCO3_CaCO3 <- 40
actual_ph <- 5.5
lactic_acid_percent <- 88 # %
lactic_acid_ml <- 0
acidulated_malt_acid_percent <- 2
acidulated_malt_oz <- 0
ph_down_gypsum_CaSO4 <- 0
ph_down_Cal_Chl_CaCl2 <- 0
ph_down_epsom_salt_MgSO4 <- 0
ph_up_slaked_lime_CaOH2 <- 0
ph_up_baking_soda_NaHCO3 <- 0
ph_up_chalk_CaCO3 <- 0
mash_Ca <- init_Ca +
(ph_up_chalk_CaCO3*105.89 +
ph_down_gypsum_CaSO4*60 +
ph_down_Cal_Chl_CaCl2*72 +
ph_up_slaked_lime_CaOH2*143)/ifelse(MV == 0, 1, MV)
mash_Mg <- init_Mg +
(ph_down_epsom_salt_MgSO4*24.6)/ifelse(MV == 0, 1, MV)
mash_Na <- init_Na +
(ph_up_baking_soda_NaHCO3*72.3)/ifelse(MV == 0, 1, MV)
mash_Cl <- init_Cl +
(ph_down_Cal_Chl_CaCl2*127.47)/ifelse(MV == 0, 1, MV)
mash_SO4 <- init_SO4 +
(ph_down_gypsum_CaSO4*147.4 +
ph_down_epsom_salt_MgSO4*103)/ifelse(MV == 0, 1, MV)
dist_water_ph_look_up_table <- data.frame(EZ_Water_Code = 0:11,
Distilled_Water_pH = c(0,
0,
5.7,
5.79,
5.77,
5.43,
5.75,
6.04,
5.56,
5.70,
NA,
4.71))
fermentables <- left_join(x = fermentables, y = dist_water_ph_look_up_table, by = "EZ_Water_Code")
fermentables <- mutate(fermentables, Distilled_Water_pH = ifelse(EZ_Water_Code == 10, 5.22-0.00504*SRM,Distilled_Water_pH))
fermentables
mash_Ca
mash_Mg
mash_Na
mash_Cl
mash_SO4
# EA
if(MV == 0){
effective_alkalinity <- 0
}else{
# There is this radio button for Bicarbonate versus Alkalinity
# We can't see how it works in the sheet.
ratio = 1
effective_alkalinity <- (init_HCO3_CaCO3*ratio+
(
(ph_up_chalk_CaCO3*130)+
(ph_up_baking_soda_NaHCO3*157)-
(176.1*lactic_acid_percent/100*lactic_acid_ml*2)-
(4160.4*acidulated_malt_acid_percent/100*acidulated_malt_oz)*2.5+
(ph_up_slaked_lime_CaOH2)*357
)/(ifelse(MV == 0,1,MV)))
}
# RA
if(MV == 0){
residual_alkalinity <- 0
}else{
residual_alkalinity <- effective_alkalinity - ((mash_Ca/1.4)+(mash_Mg/1.7))
}
#ERTM PH
if(MV == 0){
estimated_room_temp_mash_ph <- 0
}else{
estimated_room_temp_mash_ph <- fermentables %>%
mutate(Lbs_x_distWaterPH = Lbs*Distilled_Water_pH) %>%
select(Lbs_x_distWaterPH) %>%
sum()/ifelse(GB == 0, 1, GB) %>%
as.numeric() + (0.1085*MV/ifelse(GB == 0, 1, GB)+0.013)*residual_alkalinity/50
}
effective_alkalinity
residual_alkalinity
estimated_room_temp_mash_ph
effective_alkalinity*50/61
ratio = 50/61
if(MV == 0){
effective_alkalinity <- 0
}else{
# There is this radio button for Bicarbonate versus Alkalinity
# We can't see how it works in the sheet.
ratio = 50/61
#ratio = 1
effective_alkalinity <- (init_HCO3_CaCO3*ratio+
(
(ph_up_chalk_CaCO3*130)+
(ph_up_baking_soda_NaHCO3*157)-
(176.1*lactic_acid_percent/100*lactic_acid_ml*2)-
(4160.4*acidulated_malt_acid_percent/100*acidulated_malt_oz)*2.5+
(ph_up_slaked_lime_CaOH2)*357
)/(ifelse(MV == 0,1,MV)))
}
# RA
if(MV == 0){
residual_alkalinity <- 0
}else{
residual_alkalinity <- effective_alkalinity - ((mash_Ca/1.4)+(mash_Mg/1.7))
}
#ERTM PH
if(MV == 0){
estimated_room_temp_mash_ph <- 0
}else{
estimated_room_temp_mash_ph <- fermentables %>%
mutate(Lbs_x_distWaterPH = Lbs*Distilled_Water_pH) %>%
select(Lbs_x_distWaterPH) %>%
sum()/ifelse(GB == 0, 1, GB) %>%
as.numeric() + (0.1085*MV/ifelse(GB == 0, 1, GB)+0.013)*residual_alkalinity/50
}
effective_alkalinity
residual_alkalinity
estimated_room_temp_mash_ph
actual_ph <- 5.5
actual_ph <- estimated_room_temp_mash_ph
chemistry <- data.frame(
recipe_id = 1,
Init_Ca = init_Ca,
Init_Mg = init_Mg,
Init_Na = init_Na,
Init_Cl = init_Cl,
Init_SO4 = init_SO4,
Init_HCO3_CaCO3 = init_HCO3_CaCO3,
Actual_pH = actual_ph,
Effective_Alkalinity = effective_alkalinity,
Residual_Alkalinity = residual_alkalinity,
pH_DOWN_Gypsum_CaSO4 = ph_down_gypsum_CaSO4,
pH_DOWN_Cal_Chl_CaCl2 = ph_down_Cal_Chl_CaCl2,
pH_DOWN_Epsom_Salt_MgSO4 = ph_down_epsom_salt_MgSO4,
pH_UP_Slaked_Lime_CaOH2 = ph_up_slaked_lime_CaOH2,
pH_UP_Baking_Soda_NaHCO3 = ph_up_baking_soda_NaHCO3,
pH_UP_Chalk_CaCO3 = ph_up_Chalk_CaCO3)
init_Ca
init_Mg
init_Na
init_Cl
init_SO4
init_HC03_CaCO3
init_HCO3_CaCO3 <- 40
init_HCO3_CaCO3
init_HCO3_CaCO3 <- 40
lactic_acid_percent <- 88 # %
lactic_acid_ml <- 0
acidulated_malt_acid_percent <- 2
acidulated_malt_oz <- 0
ph_down_gypsum_CaSO4 <- 0
ph_down_Cal_Chl_CaCl2 <- 0
ph_down_epsom_salt_MgSO4 <- 0
ph_up_slaked_lime_CaOH2 <- 0
ph_up_baking_soda_NaHCO3 <- 0
ph_up_chalk_CaCO3 <- 0
# Post mash additons
mash_Ca <- init_Ca +
(ph_up_chalk_CaCO3*105.89 +
ph_down_gypsum_CaSO4*60 +
ph_down_Cal_Chl_CaCl2*72 +
ph_up_slaked_lime_CaOH2*143)/ifelse(MV == 0, 1, MV)
mash_Mg <- init_Mg +
(ph_down_epsom_salt_MgSO4*24.6)/ifelse(MV == 0, 1, MV)
mash_Na <- init_Na +
(ph_up_baking_soda_NaHCO3*72.3)/ifelse(MV == 0, 1, MV)
mash_Cl <- init_Cl +
(ph_down_Cal_Chl_CaCl2*127.47)/ifelse(MV == 0, 1, MV)
mash_SO4 <- init_SO4 +
(ph_down_gypsum_CaSO4*147.4 +
ph_down_epsom_salt_MgSO4*103)/ifelse(MV == 0, 1, MV)
dist_water_ph_look_up_table <- data.frame(EZ_Water_Code = 0:11,
Distilled_Water_pH = c(0,
0,
5.7,
5.79,
5.77,
5.43,
5.75,
6.04,
5.56,
5.70,
NA,
4.71))
fermentables <- left_join(x = fermentables, y = dist_water_ph_look_up_table, by = "EZ_Water_Code")
# Calculates the distilled water ph from crystal malts which are code 10
fermentables <- mutate(fermentables, Distilled_Water_pH = ifelse(EZ_Water_Code == 10, 5.22-0.00504*SRM,Distilled_Water_pH))
chemistry <- data.frame(
recipe_id = 1,
Init_Ca = init_Ca,
Init_Mg = init_Mg,
Init_Na = init_Na,
Init_Cl = init_Cl,
Init_SO4 = init_SO4,
Init_HCO3_CaCO3 = init_HCO3_CaCO3,
Actual_pH = actual_ph,
Effective_Alkalinity = effective_alkalinity,
Residual_Alkalinity = residual_alkalinity,
pH_DOWN_Gypsum_CaSO4 = ph_down_gypsum_CaSO4,
pH_DOWN_Cal_Chl_CaCl2 = ph_down_Cal_Chl_CaCl2,
pH_DOWN_Epsom_Salt_MgSO4 = ph_down_epsom_salt_MgSO4,
pH_UP_Slaked_Lime_CaOH2 = ph_up_slaked_lime_CaOH2,
pH_UP_Baking_Soda_NaHCO3 = ph_up_baking_soda_NaHCO3,
pH_UP_Chalk_CaCO3 = ph_up_Chalk_CaCO3)
actual_ph
effective_alkalinity
residual_alkalinity
ph_down_gypsum_CaSO4
ph_down_Cal_Chl_CaCl2
ph_down_epsom_salt_MgSO4
ph_up_slaked_lime_CaOH2
ph_up_baking_soda_NaHCO3
ph_up_chalk_CaCO3
chemistry <- data.frame(
recipe_id = 1,
Init_Ca = init_Ca,
Init_Mg = init_Mg,
Init_Na = init_Na,
Init_Cl = init_Cl,
Init_SO4 = init_SO4,
Init_HCO3_CaCO3 = init_HCO3_CaCO3,
Actual_pH = actual_ph,
Effective_Alkalinity = effective_alkalinity,
Residual_Alkalinity = residual_alkalinity,
pH_DOWN_Gypsum_CaSO4 = ph_down_gypsum_CaSO4,
pH_DOWN_Cal_Chl_CaCl2 = ph_down_Cal_Chl_CaCl2,
pH_DOWN_Epsom_Salt_MgSO4 = ph_down_epsom_salt_MgSO4,
pH_UP_Slaked_Lime_CaOH2 = ph_up_slaked_lime_CaOH2,
pH_UP_Baking_Soda_NaHCO3 = ph_up_baking_soda_NaHCO3,
pH_UP_Chalk_CaCO3 = ph_up_chalk_CaCO3)
print(paste("Effective Alkalinity:", effective_alkalinity))
print(paste("Effective Alkalinity:", effective_alkalinity))
print(paste("Residual Alkalinity:", residual_alkalinity))
print(paste("Estimated Room-Temp Mash pH:", estimated_room_temp_mash_ph))
print(paste("Desired Room-Temp Mash pH: 5.4 - 5.6"))
print(paste("Effective Alkalinity:", effective_alkalinity))
print(paste("Residual Alkalinity:", residual_alkalinity))
print(paste("Estimated Room-Temp Mash pH:", estimated_room_temp_mash_ph))
print(paste("Desired Room-Temp Mash pH: 5.4 - 5.6"))
init_Ca <- 4
init_Mg <- 1
init_Na <- 32
init_Cl <- 23
init_SO4 <- 6
init_HCO3_CaCO3 <- 40
lactic_acid_percent <- 88 # %
lactic_acid_ml <- 0
acidulated_malt_acid_percent <- 2
acidulated_malt_oz <- 0
ph_down_gypsum_CaSO4 <- 0
ph_down_Cal_Chl_CaCl2 <- 0
ph_down_epsom_salt_MgSO4 <- 0
ph_up_slaked_lime_CaOH2 <- 0
ph_up_baking_soda_NaHCO3 <- 0
ph_up_chalk_CaCO3 <- 0
# Post mash additons
mash_Ca <- init_Ca +
(ph_up_chalk_CaCO3*105.89 +
ph_down_gypsum_CaSO4*60 +
ph_down_Cal_Chl_CaCl2*72 +
ph_up_slaked_lime_CaOH2*143)/ifelse(MV == 0, 1, MV)
mash_Mg <- init_Mg +
(ph_down_epsom_salt_MgSO4*24.6)/ifelse(MV == 0, 1, MV)
mash_Na <- init_Na +
(ph_up_baking_soda_NaHCO3*72.3)/ifelse(MV == 0, 1, MV)
mash_Cl <- init_Cl +
(ph_down_Cal_Chl_CaCl2*127.47)/ifelse(MV == 0, 1, MV)
mash_SO4 <- init_SO4 +
(ph_down_gypsum_CaSO4*147.4 +
ph_down_epsom_salt_MgSO4*103)/ifelse(MV == 0, 1, MV)
dist_water_ph_look_up_table <- data.frame(EZ_Water_Code = 0:11,
Distilled_Water_pH = c(0,
0,
5.7,
5.79,
5.77,
5.43,
5.75,
6.04,
5.56,
5.70,
NA,
4.71))
fermentables <- left_join(x = fermentables, y = dist_water_ph_look_up_table, by = "EZ_Water_Code")
# Calculates the distilled water ph from crystal malts which are code 10
fermentables <- mutate(fermentables, Distilled_Water_pH = ifelse(EZ_Water_Code == 10, 5.22-0.00504*SRM,Distilled_Water_pH))
# Calculating Effective Alkalinity
if(MV == 0){
effective_alkalinity <- 0
}else{
# There is this radio button for Bicarbonate versus Alkalinity
# We can't see how it works in the sheet.
ratio = 50/61
#ratio = 1
effective_alkalinity <- (init_HCO3_CaCO3*ratio+
(
(ph_up_chalk_CaCO3*130)+
(ph_up_baking_soda_NaHCO3*157)-
(176.1*lactic_acid_percent/100*lactic_acid_ml*2)-
(4160.4*acidulated_malt_acid_percent/100*acidulated_malt_oz)*2.5+
(ph_up_slaked_lime_CaOH2)*357
)/(ifelse(MV == 0,1,MV)))
}
# Calculating Residual Alkalinity
if(MV == 0){
residual_alkalinity <- 0
}else{
residual_alkalinity <- effective_alkalinity - ((mash_Ca/1.4)+(mash_Mg/1.7))
}
# Estimated Room-Temp Mash pH
if(MV == 0){
estimated_room_temp_mash_ph <- 0
}else{
estimated_room_temp_mash_ph <- fermentables %>%
mutate(Lbs_x_distWaterPH = Lbs*Distilled_Water_pH) %>%
select(Lbs_x_distWaterPH) %>%
sum()/ifelse(GB == 0, 1, GB) %>%
as.numeric() + (0.1085*MV/ifelse(GB == 0, 1, GB)+0.013)*residual_alkalinity/50
}
# Choose to hard code or not.
# actual_ph <- 5.5
actual_ph <- estimated_room_temp_mash_ph
chemistry <- data.frame(
recipe_id = 1,
Init_Ca = init_Ca,
Init_Mg = init_Mg,
Init_Na = init_Na,
Init_Cl = init_Cl,
Init_SO4 = init_SO4,
Init_HCO3_CaCO3 = init_HCO3_CaCO3,
Actual_pH = actual_ph,
Effective_Alkalinity = effective_alkalinity,
Residual_Alkalinity = residual_alkalinity,
pH_DOWN_Gypsum_CaSO4 = ph_down_gypsum_CaSO4,
pH_DOWN_Cal_Chl_CaCl2 = ph_down_Cal_Chl_CaCl2,
pH_DOWN_Epsom_Salt_MgSO4 = ph_down_epsom_salt_MgSO4,
pH_UP_Slaked_Lime_CaOH2 = ph_up_slaked_lime_CaOH2,
pH_UP_Baking_Soda_NaHCO3 = ph_up_baking_soda_NaHCO3,
pH_UP_Chalk_CaCO3 = ph_up_chalk_CaCO3)
print(paste("Effective Alkalinity:", effective_alkalinity))
print(paste("Residual Alkalinity:", residual_alkalinity))
print(paste("Estimated Room-Temp Mash pH:", estimated_room_temp_mash_ph))
print(paste("Desired Room-Temp Mash pH: 5.4 - 5.6"))
kable(chemistry)
# Using style OG
# degree_plato <- (recipe$OG-1)*1000/4
# Using current predicted OG
degree_plato <- (predicted_og-1)*1000/4
liter_batch_size <- batch_size*3.785 # Liters in a gallon
cell_density <- (1e9*degree_plato*liter_batch_size)
# Assumed that you want the right cell density and made it happen
pitched_cells <- cell_density
# IF otherwise, specify
# pitched_cells <- 150
yeast <- data.frame(
recipe_id = 1,
Yeast_Strain = "Fermentis Safale US-05",
Attenuation = 81,
Initial_Cell_Count_Billions = cell_density/1e9,
Pitched_Cells_Billions = pitched_cells/1e9,
Liters_For_Starter = 0,
Time_For_Starter = 0
)
kable(yeast)
OG
predicted_og
yeast
yeast$Attenuation
predicted_fg <- predicted_og-(yeast$Attenuation/100)*(predicted_og-1)
predicted_og
predicted_fg
predicted_abv <- (1.05/0.79)*((predicted_og-predicted_fg)/predicted_fg)*100
predicted_abv
print(paste("Predicted ABV:", predicted_abv))
4.95*4/11.768
library(rmarkdown)
library(knitr)
library(dplyr)
yeast <- data.frame(
Recipe = Recipe,
Yeast_Strain = "Safale K-97 Dry Ale",
Attenuation = 84,
Initial_Cell_Count_Billions = NULL,
Pitched_Cells_Billions = 317,
Liters_For_Starter = NULL,
Time_For_Starter = NULL
)
Recipe = 'Altbier1'
recipe <- data.frame(
Recipe = Recipe,
Style = "Altbier",
Date = "02.20.2017",
OG = 1.051,
FG = 1.008
)
kable(recipe)
fermentables <- data.frame(
Recipe = rep(Recipe,3),
Ingredients = c("Pilzen 1.7 L","Munich Dark 15 L","Carafa II 430 L"),
Lbs = c(7.75, 2.0, 0.15)
)
kable(fermentables)
hops <- data.frame(
Recipe = rep(Recipe,2),
Hop = c("Spalt"),
Weight = c(4.35),
Boil_Time = c(60),
IBU = c(34)
)
kable(hops)
hops <- data.frame(
Recipe = Recipe,
Hop = c("Spalt"),
Weight = c(4.35),
Boil_Time = c(60),
IBU = c(34)
)
kable(hops)
mash <- data.frame(
Recipe = Recipe,
Mash_Thickness = 1.68,
Sacc_Rest = 147,
Mash_Duration = 90,
Strike_Water_Temp = 156,
Mash_Vol = 4.16,
Sparge_Vol = 4.91
)
kable(mash)
yeast <- data.frame(
Recipe = Recipe,
Yeast_Strain = "Safale K-97 Dry Ale",
Attenuation = 84,
Initial_Cell_Count_Billions = NULL,
Pitched_Cells_Billions = 317,
Liters_For_Starter = NULL,
Time_For_Starter = NULL
)
Recipe
Recipe = Recipe
Yeast_Strain = "Safale K-97 Dry Ale"
ttenuation = 84
Initial_Cell_Count_Billions = NULL
Pitched_Cells_Billions = 317
Liters_For_Starter = NULL
Time_For_Starter = NULL
yeast <- data.frame(
Recipe = Recipe,
Yeast_Strain = "Safale K-97 Dry Ale",
Attenuation = 84,
Initial_Cell_Count_Billions = 5,
Pitched_Cells_Billions = 317,
Liters_For_Starter = 5,
Time_For_Starter = 5
)
yeast <- data.frame(
Recipe = Recipe,
Yeast_Strain = "Safale K-97 Dry Ale",
Attenuation = 84,
Initial_Cell_Count_Billions = NULL,
Pitched_Cells_Billions = 317,
Liters_For_Starter = 5,
Time_For_Starter = 5
)
yeast <- data.frame(
Recipe = Recipe,
Yeast_Strain = "Safale K-97 Dry Ale",
Attenuation = 84,
Initial_Cell_Count_Billions = NA,
Pitched_Cells_Billions = 317,
Liters_For_Starter = NA,
Time_For_Starter = NA
)
getwd()
library(rmarkdown)
library(knitr)
library(dplyr)
print(getwd())
library(rmarkdown)
library(knitr)
library(dplyr)
cat("
<style>
body {background-color: #FEF9E7;}
</style>
")
print(getwd())
1.25*12.17
1.25*12.17/4
